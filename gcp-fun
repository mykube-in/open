# Function dependencies, for example:
# package>=version
pandas==1.3.4
numpy==1.21.4
google-api-core==2.2.2
google-auth==2.3.3
google-auth-oauthlib==0.4.6
google-cloud-core==2.2.1
google-cloud-storage==1.43.0
google-crc32c==1.3.0
google-resumable-media==2.1.0
googleapis-common-protos==1.53.0
gspread==4.0.1




















import pandas as pd
import numpy as np
from google.cloud import storage as st
import os
from io import StringIO


def hello_gcs(event, context):
    bucket = validate_message(event, 'bucket')
    contentType = validate_message(event, 'contentType')
    name = validate_message(event, 'name')
    size = validate_message(event, 'size')
    extension = name[-4:]  # extract last character from string
    if extension.lower() != ".csv":
        print("*************************************************")
        print("invalid file to process")
        exit("5001")
       
    print("************************************************")
    print("bucket=", bucket)
    print("contentType=", contentType)
    print("name=", name)
    print("size", size)
    print("************************************************")
    destination_file_name = "/tmp/" + name
    print("destination_file_name=", destination_file_name)
    print("1")
    fhtodownloadfile = open(destination_file_name,'wb')
    print("2")
    storage_client = st.Client()
    print("3")
    bucket = storage_client.get_bucket(bucket)
    print("4")
    blob = bucket.blob(name)
    print("5")
    blob.download_to_file(fhtodownloadfile)
    print("6")
    print('Blob {} downloaded to {}.'.format(name, destination_file_name))
    print("7")
    files = os.listdir('/tmp/')
    print(files)
    data_str = blob.download_as_text()
    data_dowloaded_df = pd.read_csv(StringIO(data_str))
    print(data_dowloaded_df.head())



def validate_message(message, param):
    var = message.get(param)
    if not var:
        raise ValueError('{} is not provided. Make sure you have \
                          property {} in the request'.format(param, param))
    return var
